/*
 * setting
 *
 * Copyright (c) 2000 - 2011 Samsung Electronics Co., Ltd.
 *
 * Contact: MyoungJune Park <mj2004.park@samsung.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

collections {
	base_scale: 1.8;
   #include "tizen-dark-inc.edc"
   #include "genlist_macro.edc"
   #include "genlist_textblock_style.edc"


   group { name: "elm/slider/horizontal/setting_tap_to_drag";
      images {
         image: "00_progress_bg.png" COMP;
         image: "00_progress_bar.png" COMP;
		 image: "00_slider_center_point_bg.png" COMP;
      }
      script {
         public invert_on = 0;
         public set_invert_on() {
            set_state(PART:"level", "inverted", 0.0);
            set_state(PART:"level2", "inverted", 0.0);
            set_int(invert_on, 1);
         }
         public set_invert_off() {
            set_state(PART:"level", "default", 0.0);
            set_state(PART:"level2", "default", 0.0);
            set_int(invert_on, 0);
         }
         public thumb_down() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "pressed", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "pressed", 0.0);
            }
         public thumb_up() {
            if(get_int(invert_on) == 0)
               set_state(PART:"level", "default", 0.0);
            else if(get_int(invert_on) == 1)
               set_state(PART:"level2", "inverted", 0.0);
            }
         }
         parts {
            part { name: "access";
               type: RECT;
               description { state: "default" 0.0;
                  fixed: 1 1;
                  color: 8 8 8 8;
               }
            }
            part { name: "base";
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_BASE_MIN_WIDTH_INC SLIDER_BASE_HEIGHT_INC;
                  max: 99999 SLIDER_BASE_HEIGHT_INC;
                  rel1 { to: "bg";
                     offset: 1 0;
                  }
                  rel2 { to: "bg";
                     offset: -5 -1;
                  }
                  image.normal: "00_progress_bg.png";
                  image.border: PROGRESS_BG_IMAGE_BORDER_INC;
                  image.border_scale: 1;
               }
            }
			 part { name:"center_point";
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_CENTER_POINT_MIN_SIZE_INC;
                  max: SLIDER_CENTER_POINT_MAX_SIZE_INC;
                  visible: 0;
                  image.normal: "00_slider_center_point_bg.png";
                  rel1.to_y: "center_point_bottom_padding";
                  rel2 {
                     relative: 1.0 0.0;
                     to_y: "center_point_bottom_padding";
                  }
                  align: 0.5 1.0;
                  fixed: 0 1;
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
			part { name: "center_point_bottom_padding";
                type: SPACER;
                scale: 1;
               description {
                  state: "default" 0.0;
                  min: SLIDER_CENTER_POINT_PADDING_SIZE_INC;
                  rel1.to: "base";
                  rel2 {
                     to: "base";
                     relative: 1.0 0.0;
                  }
                  align: 0.5 1.0;
                  fixed: 0 1;
               }
             }
            part {
               name: "bar_image_left_padding";
               type: SPACER;
               scale: 1;
               description {
                  state: "default" 0.0;
                  min: PROGRESS_BAR_IMAGE_PADDING_SIZE_INC;
                  max: PROGRESS_BAR_IMAGE_PADDING_SIZE_INC;
                  fixed: 1 0;
                  rel1.to: "base";
                  rel2 {
                     relative: 0.0  1.0;
                     to: "base";
                  }
                  align: 0.0 0.5;
               }
            }
            part {
               name: "bar_image_right_padding";
               type: SPACER;
               scale: 1;
               description {
                  state: "default" 0.0;
                  min: PROGRESS_BAR_IMAGE_PADDING_SIZE_INC;
                  max: PROGRESS_BAR_IMAGE_PADDING_SIZE_INC;
                  fixed: 1 0;
                  rel1 {
                     relative: 1.0  0.0;
                     to: "base";
                  }
                  rel2.to: "base";
                  align: 1.0 0.5;
               }
            }
            part { name: "level";
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 1 1;
                  rel1 {
                     to_x: "bar_image_left_padding";
                     to_y: "base";
                     relative: 1.0 0.0;
                  }
                  rel2 {
                     to_y: "base";
                     to_x: "elm.dragable.slider";
                     offset: -5 -1;
                     relative: 0.5 1.0;
                  }
                  image.normal: "00_progress_bar.png";
                  image.border: PROGRESS_BAR_IMAGE_BORDER_INC;
                  image.border_scale: 1;
               }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 0;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
               }
            }
            part { name: "level2";
               mouse_events: 0;
               scale: 1;
               clip_to: "clipper";
               description { state: "default" 0.0;
                  fixed: 1 1;
                  visible: 0;
                  rel1 {
                     to_y: "base";
                     to_x: "elm.dragable.slider";
                     relative: 0.5 0.0;
                  }
                  rel1 {
                     to_x: "bar_image_right_padding";
                     to_y: "base";
                     relative: 0.0 1.0;
                  }
                  image.normal: "00_progress_bg.png";
                  image.border: PROGRESS_BG_IMAGE_BORDER_INC;
                  image.border_scale: 1;
               }
               description { state: "inverted" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
               description { state: "pressed" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "bg";
               type: RECT;
               scale: 1;
               description { state: "default" 0.0;
                  rel1.to: "elm.swallow.bar";
                  rel2.to: "elm.swallow.bar";
                  rel2.offset: 3 0;
                  color: 8 8 8 8;
               }
            }
            part { name: "elm.swallow.bar";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  min: SLIDER_SWALLOW_BAR_MIN_WIDTH_INC SLIDER_SWALLOW_BAR_HEIGHT_INC;
                  max: 99999 SLIDER_SWALLOW_BAR_HEIGHT_INC;
                  align: 1.0 0.5;
                  rel1 {
                     to_x: "bar_left_padding";
                     relative: 1.0 0.0;
                  }
                  rel2 {
                     to_x: "bar_right_padding";
                     relative: 0.0 1.0;
                  }
               }
            }
            part {
               name: "bar_left_padding";
               type: SWALLOW;
               scale: 1;
               description {
                  state: "default" 0.0;
                  visible: 0;
                  min: 10 0;
                  fixed: 1 1;
                  rel1 {
                     relative: 1.0  0.5;
                     to_x: "elm.text";
                  }
                  rel2 {
                     relative: 1.0  0.5;
                     to_x: "elm.text";
                  }
                  align: 0.0 0.5;
               }
            }
            part {
               name: "bar_right_padding";
               type: SWALLOW;
               scale: 1;
               description {
                  state: "default" 0.0;
                  visible: 0;
                  min: 10 0;
                  fixed: 1 1;
                  rel1 {
                     relative: 0.0  0.5;
                     to_x: "elm.units";
                  }
                  rel2 {
                     relative: 0.0  0.5;
                     to_x: "elm.units";
                  }
                  align: 1.0 0.5;
               }
            }
            part { name: "elm.swallow.icon";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  align: 0.0 0.5;
                  rel1 {
                     to_y: "elm.swallow.bar";
                  }
                  rel2 {
                     relative: 0.0 1.0;
                     to_y: "elm.swallow.bar";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  aspect: 1.0 1.0;
                  aspect_preference: VERTICAL;
               }
            }
            part { name: "elm.text";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  fixed: 1 1;
                  align: 0.0 0.5;
                  rel1.to_x: "elm.swallow.icon";
                  rel1.relative: 1.0 0.0;
                  rel1.offset: -1 4;
                  rel2.to_x: "elm.swallow.icon";
                  rel2.relative: 1.0 1.0;
                  rel2.offset: -1 -5;
                  color: SLIDER_UNITS_TEXT_COLOR_INC;
                  text {
                     font: "Tizen:style=Medium";
                     size: SLIDER_UNITS_TEXT_SIZE_INC;
                     min: 0 0;
                     align: 0.0 0.5;
                     text_class: "tizen";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  text.min: 1 1;
                  rel1.offset: 0 4;
                  rel2.offset: 0 -5;
               }
            }
            part { name: "elm.swallow.end";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  align: 1.0 0.5;
                  rel1 {
                     relative: 1.0 0.0;
                     to_y: "elm.swallow.bar";
                  }
                  rel2 {
                     relative: 1.0 1.0;
                     to_y: "elm.swallow.bar";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
                  aspect: 1.0 1.0;
                  aspect_preference: VERTICAL;
               }
            }
            part { name: "elm.units";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  fixed: 1 1;
                  align: 1.0 0.5;
                  rel1.relative: 0.0 0.0;
                  rel1.offset: 0 8;
                  rel1.to_x: "elm.swallow.end";
                  rel2.relative: 0.0 1.0;
                  rel2.offset: 0 -9;
                  rel2.to_x: "elm.swallow.end";
                  color: SLIDER_UNITS_TEXT_COLOR_INC;
                  text {
                     font: "Tizen:style=Bold";
                     size: SLIDER_UNITS_TEXT_SIZE_INC;
                     min: 0 0;
                     align: 0.0 0.5;
                     text_class: "tizen";
                  }
               }
               description { state: "visible" 0.0;
                  inherit: "default" 0.0;
                  fixed: 1 1;
                  visible: 1;
                  text.min: 1 1;
                  rel1.offset: -5 0;
                  rel2.offset: -5 -1;
               }
            }
            part { name: "elm.dragable.slider";
               type: GROUP;
               source: "elm/slider/horizontal/indicator/tap_to_drag";
               mouse_events: 1;
               scale: 1;
               dragable {
                  x: 1 1 0;
                  y: 0 0 0;
                  confine: "bg";
               }
               description { state: "default" 0.0;
                  min: SLIDER_INDICATOR_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
                  fixed: 1 1;
                  rel1 {
                     relative: 0.5 0.0;
                     to_x: "bg";
                  }
                  rel2 {
                     relative: 0.5 1.0;
                     to_x: "bg";
                  }
                  color: 8 8 8 8;
               }
            }
            part { name: "disabler";
               type: RECT;
               mouse_events: 1;
               repeat_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 0;
                  min: 1 1;
                  color: 8 8 8 8;
               }
               description { state: "disabled" 0.0;
                  inherit: "default" 0.0;
                  visible: 1;
               }
            }
            part { name: "clipper";
               type: RECT;
               description { state: "default" 0.0;
                  color: 255 255 255 255;
               }
               description { state: "disabled" 0.0;
                  color: 255 255 255 102;
               }
            }
         }
		  programs {
            program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
         }
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            script {
               set_invert_on();
            }
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            script {
               set_invert_off();
            }
         }
         program { name: "val_show";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            script {
               thumb_down();
            }
         }
         program { name: "val_hide";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            script {
               thumb_up();
            }
         }
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "clipper";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "disabler";
            target: "clipper";
         }
		  program { name: "center_point_enable";
            signal: "slider,center,point,show";
            action:  STATE_SET "visible" 0.0;
            target: "center_point";
         }
         program { name: "center_point_disable";
            signal: "slider,center,point,hide";
            action:  STATE_SET "default" 0.0;
            target: "center_point";
         }
      }
   }

   group { name: "elm/slider/horizontal/indicator/default";
           alias: "elm/slider/horizontal/indicator/disabled";
           alias: "elm/slider/horizontal/indicator/tap_to_drag";
           alias: "elm/slider/horizontal/indicator/textstyle";
           alias: "elm/slider/horizontal/indicator/numberstyle";
      images {
         image: "00_slider_handle.png" COMP;
         image: "00_slider_handle_dim.png" COMP;
         image: "00_slider_handle_press.png" COMP;
      }
      styles{
         style { name: "indicator_default";
            base: "font=Tizen:style=Medium font_size="SLIDER_INDICATOR_TEXT_SIZE_INC" align=center color="SLIDER_INDICATOR_TEXT_COLOR_INC" style=shadow,bottom shadow_color="SLIDER_INDICATOR_TEXT_SHADOW_TEXTBLOCK_NORMAL_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "indicator_pressed";
            base: "font=Tizen:style=Medium font_size="SLIDER_INDICATOR_TEXT_SIZE_INC" align=center color="SLIDER_INDICATOR_TEXT_PRESSED_COLOR_INC" style=shadow,top shadow_color="SLIDER_INDICATOR_TEXT_SHADOW_TEXTBLOCK_PRESSED_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
         style { name: "indicator_dim";
            base: "font=Tizen:style=Medium font_size="SLIDER_INDICATOR_TEXT_SIZE_INC" align=center color="SLIDER_INDICATOR_TEXT_DIM_COLOR_INC" style=shadow,bottom shadow_color="SLIDER_INDICATOR_TEXT_SHADOW_TEXTBLOCK_DIM_COLOR_INC" ellipsis=1.0 wrap=none text_class=tizen";
            tag: "br" "\n";
            tag: "ps" "ps";
            tag: "tab" "\t";
         }
      }
      parts {
         part { name: "access";
            type: RECT;
            description { state: "default" 0.0;
               fixed: 1 1;
               color: 8 8 8 8;
            }
         }
         part { name: "button_events";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 2*SLIDER_INDICATOR_WIDTH_INC 1.5*SLIDER_INDICATOR_HEIGHT_INC;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 8 8 8 8;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "image_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: SLIDER_INDICATOR_IMAGE_PADDING_SIZE_INC;
               max: SLIDER_INDICATOR_IMAGE_PADDING_SIZE_INC;
               rel1 {
                  to_x: "elm.indicator";
                  relative: -1.0 0.0;
               }
               rel2 {
                  to_x: "elm.indicator";
                  relative: 0.0 1.0;
               }
               align: 1.0 0.5;
            }
         }
         part { name: "image_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: SLIDER_INDICATOR_IMAGE_PADDING_SIZE_INC;
               max: SLIDER_INDICATOR_IMAGE_PADDING_SIZE_INC;
               rel1 {
                  to_x: "elm.indicator";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "elm.indicator";
                  relative: 2.0 1.0;
               }
               align: 0.0 0.5;
            }
         }
         part { name: "button0";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: SLIDER_INDICATOR_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
               max: SLIDER_INDICATOR_MAX_WIDTH_INC SLIDER_INDICATOR_HEIGHT_INC;
               rel1.to: "image_left_padding";
               rel2.to: "image_right_padding";
               image {
                  normal: "00_slider_handle.png";
                  border: SLIDER_INDICATOR_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_slider_handle_press.png";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "00_slider_handle_dim.png";
               }
            }
         }
         part { name: "elm.indicator";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               text {
                  style: "indicator_default";
                  min: 1 1;
               }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
             }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "indicator_pressed";
                  min: 1 1;
               }
            }
            description { state: "dim" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "indicator_dim";
                  min: 1 1;
               }
            }
         }
      }
      programs {
         program { name: "set_val_show";
            signal: "elm,state,val,show";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.indicator";
         }
         program { name: "set_val_hide";
            signal: "elm,state,val,hide";
            source: "elm";
            action:  STATE_SET "hide" 0.0;
            target: "elm.indicator";
         }
         program { name: "slider_disable";
            signal: "elm,state,disabled";
            source: "elm";
            action:  STATE_SET "disabled" 0.0;
            target: "button0";
            target: "button_events";
         }
         program { name: "slider_enable";
            signal: "elm,state,enabled";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "button0";
            target: "button_events";
         }
         program { name: "mouse_down";
            signal: "mouse,down,*";
            source: "button_events";
            action:  STATE_SET "pressed" 0.0;
            target: "button0";
            after: "text_pressed";
         }
         program { name: "mouse_up";
            signal: "mouse,up,*";
            source: "button_events";
            action:  STATE_SET "default" 0.0;
            target: "button0";
            after: "text_unpressed";
         }
         program { name: "text_pressed";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.indicator", st, 30, vl);
               if (!strcmp(st, "default"))
                 set_state(PART:"elm.indicator", "pressed", 0.0);
            }
         }
         program { name: "text_unpressed";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.indicator", st, 30, vl);
               if (!strcmp(st, "pressed"))
                 set_state(PART:"elm.indicator", "default", 0.0);
            }
         }
      }
   }

	group { name: "gl_custom_item";
	   styles{
		  style { name: "text_style";
			 base: "color=#000000FF font=Tizen:style=Regular font_size=30 text_class=list_item ellipsis=1.0";
			 tag:  "br" "\n";
			 tag:  "ps" "ps";
			 tag:  "tab" "\t";
			 tag:  "b" "+ font_weight=Bold";
			 tag:  "match" "+ color=#0051B5FF";
		  }
	   }
	   parts {
		  part { name: "base";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 120; //GENLIST_ITEM_1LINE_HEIGHT
			 }
		  }
		  part { name: "left_padding";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 24 0;
				align: 0.0 0.0;
				rel1 { to: "base"; relative: 0.0 0.0; }
				rel2 { to: "base"; relative: 0.0 1.0; }
			 }
		  }
		  part { name: "right_padding";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 24 0;
				align: 1.0 0.0;
				rel1 { to: "base"; relative: 1.0 0.0; }
				rel2 { to: "base"; relative: 1.0 1.0; }
			 }
		  }
		  part { name: "top_padding";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 17;
				align: 0.0 0.0;
				rel1 { to_x: "left_padding"; to_y: "base"; relative: 1.0 0.0; }
				rel2 { to_x: "right_padding"; to_y: "base"; relative: 0.0 0.0; }
			 }
		  }
		  part { name: "elm.text";
			 type: SWALLOW;
			 scale: 1;
			 mouse_events: 0;
			 description { state: "default" 0.0;
				min: 0 41;
				align: 0.0 0.0;
				rel1 { to: "top_padding"; relative: 0.0 1.0; }
				rel2 { to: "top_padding"; relative: 1.0 1.0; }
			 }
		  }
		  part { name: "text_content_padding";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 10;
				align: 0.0 0.0;
				rel1 { to: "elm.text"; relative: 0.0 1.0; }
				rel2 { to: "elm.text"; relative: 1.0 1.0; }
			 }
		  }
		  part { name: "elm.swallow.content";
			 type: SWALLOW;
			 scale: 1;
			 description { state: "default" 0.0;
				align: 0.5 0.0;
				rel1 { to: "text_content_padding"; relative: 0.0 1.0; }
				rel2 { to: "bottom_padding"; relative: 1.0 0.0; }
			 }
		  }
		  part { name: "bottom_padding";
			 type: SPACER;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 24;
				align: 0.5 1.0;
				rel1 { to: "base"; relative: 0.0 1.0; }
				rel2 { to: "base"; relative: 1.0 1.0; }
			 }
		  }
	   }
	}
}






